// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/game.proto
// Protobuf C++ Version: 5.29.1

#ifndef proto_2fgame_2eproto_2epb_2eh
#define proto_2fgame_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fgame_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgame_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fgame_2eproto;
namespace userservice {
class GameState;
struct GameStateDefaultTypeInternal;
extern GameStateDefaultTypeInternal _GameState_default_instance_;
class GetGameStateRequest;
struct GetGameStateRequestDefaultTypeInternal;
extern GetGameStateRequestDefaultTypeInternal _GetGameStateRequest_default_instance_;
class GetGameStateResponse;
struct GetGameStateResponseDefaultTypeInternal;
extern GetGameStateResponseDefaultTypeInternal _GetGameStateResponse_default_instance_;
class Player;
struct PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class RegisterPlayerRequest;
struct RegisterPlayerRequestDefaultTypeInternal;
extern RegisterPlayerRequestDefaultTypeInternal _RegisterPlayerRequest_default_instance_;
class RegisterPlayerResponse;
struct RegisterPlayerResponseDefaultTypeInternal;
extern RegisterPlayerResponseDefaultTypeInternal _RegisterPlayerResponse_default_instance_;
}  // namespace userservice
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace userservice {

// ===================================================================


// -------------------------------------------------------------------

class RegisterPlayerResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userservice.RegisterPlayerResponse) */ {
 public:
  inline RegisterPlayerResponse() : RegisterPlayerResponse(nullptr) {}
  ~RegisterPlayerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterPlayerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterPlayerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterPlayerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterPlayerResponse(const RegisterPlayerResponse& from) : RegisterPlayerResponse(nullptr, from) {}
  inline RegisterPlayerResponse(RegisterPlayerResponse&& from) noexcept
      : RegisterPlayerResponse(nullptr, std::move(from)) {}
  inline RegisterPlayerResponse& operator=(const RegisterPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterPlayerResponse& operator=(RegisterPlayerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterPlayerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterPlayerResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterPlayerResponse*>(
        &_RegisterPlayerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RegisterPlayerResponse& a, RegisterPlayerResponse& b) { a.Swap(&b); }
  inline void Swap(RegisterPlayerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterPlayerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterPlayerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterPlayerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterPlayerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterPlayerResponse& from) { RegisterPlayerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterPlayerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.RegisterPlayerResponse"; }

 protected:
  explicit RegisterPlayerResponse(::google::protobuf::Arena* arena);
  RegisterPlayerResponse(::google::protobuf::Arena* arena, const RegisterPlayerResponse& from);
  RegisterPlayerResponse(::google::protobuf::Arena* arena, RegisterPlayerResponse&& from) noexcept
      : RegisterPlayerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // int64 player_id = 1;
  void clear_player_id() ;
  ::int64_t player_id() const;
  void set_player_id(::int64_t value);

  private:
  ::int64_t _internal_player_id() const;
  void _internal_set_player_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:userservice.RegisterPlayerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterPlayerResponse& from_msg);
    ::int64_t player_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};
// -------------------------------------------------------------------

class RegisterPlayerRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:userservice.RegisterPlayerRequest) */ {
 public:
  inline RegisterPlayerRequest() : RegisterPlayerRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterPlayerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterPlayerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterPlayerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterPlayerRequest(const RegisterPlayerRequest& from) : RegisterPlayerRequest(nullptr, from) {}
  inline RegisterPlayerRequest(RegisterPlayerRequest&& from) noexcept
      : RegisterPlayerRequest(nullptr, std::move(from)) {}
  inline RegisterPlayerRequest& operator=(const RegisterPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterPlayerRequest& operator=(RegisterPlayerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterPlayerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterPlayerRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterPlayerRequest*>(
        &_RegisterPlayerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RegisterPlayerRequest& a, RegisterPlayerRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterPlayerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterPlayerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterPlayerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RegisterPlayerRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RegisterPlayerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RegisterPlayerRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.RegisterPlayerRequest"; }

 protected:
  explicit RegisterPlayerRequest(::google::protobuf::Arena* arena);
  RegisterPlayerRequest(::google::protobuf::Arena* arena, const RegisterPlayerRequest& from);
  RegisterPlayerRequest(::google::protobuf::Arena* arena, RegisterPlayerRequest&& from) noexcept
      : RegisterPlayerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:userservice.RegisterPlayerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterPlayerRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};
// -------------------------------------------------------------------

class Player final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userservice.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  ~Player() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Player* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Player));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player(
      ::google::protobuf::internal::ConstantInitialized);

  inline Player(const Player& from) : Player(nullptr, from) {}
  inline Player(Player&& from) noexcept
      : Player(nullptr, std::move(from)) {}
  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
        &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Player& a, Player& b) { a.Swap(&b); }
  inline void Swap(Player* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Player>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player& from) { Player::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Player* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.Player"; }

 protected:
  explicit Player(::google::protobuf::Arena* arena);
  Player(::google::protobuf::Arena* arena, const Player& from);
  Player(::google::protobuf::Arena* arena, Player&& from) noexcept
      : Player(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerIdFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
    kPosZFieldNumber = 4,
  };
  // int64 player_id = 1;
  void clear_player_id() ;
  ::int64_t player_id() const;
  void set_player_id(::int64_t value);

  private:
  ::int64_t _internal_player_id() const;
  void _internal_set_player_id(::int64_t value);

  public:
  // int64 pos_x = 2;
  void clear_pos_x() ;
  ::int64_t pos_x() const;
  void set_pos_x(::int64_t value);

  private:
  ::int64_t _internal_pos_x() const;
  void _internal_set_pos_x(::int64_t value);

  public:
  // int64 pos_y = 3;
  void clear_pos_y() ;
  ::int64_t pos_y() const;
  void set_pos_y(::int64_t value);

  private:
  ::int64_t _internal_pos_y() const;
  void _internal_set_pos_y(::int64_t value);

  public:
  // int64 pos_z = 4;
  void clear_pos_z() ;
  ::int64_t pos_z() const;
  void set_pos_z(::int64_t value);

  private:
  ::int64_t _internal_pos_z() const;
  void _internal_set_pos_z(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:userservice.Player)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Player& from_msg);
    ::int64_t player_id_;
    ::int64_t pos_x_;
    ::int64_t pos_y_;
    ::int64_t pos_z_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};
// -------------------------------------------------------------------

class GetGameStateRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userservice.GetGameStateRequest) */ {
 public:
  inline GetGameStateRequest() : GetGameStateRequest(nullptr) {}
  ~GetGameStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGameStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGameStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGameStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGameStateRequest(const GetGameStateRequest& from) : GetGameStateRequest(nullptr, from) {}
  inline GetGameStateRequest(GetGameStateRequest&& from) noexcept
      : GetGameStateRequest(nullptr, std::move(from)) {}
  inline GetGameStateRequest& operator=(const GetGameStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGameStateRequest& operator=(GetGameStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGameStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGameStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetGameStateRequest*>(
        &_GetGameStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetGameStateRequest& a, GetGameStateRequest& b) { a.Swap(&b); }
  inline void Swap(GetGameStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGameStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGameStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGameStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGameStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGameStateRequest& from) { GetGameStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGameStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.GetGameStateRequest"; }

 protected:
  explicit GetGameStateRequest(::google::protobuf::Arena* arena);
  GetGameStateRequest(::google::protobuf::Arena* arena, const GetGameStateRequest& from);
  GetGameStateRequest(::google::protobuf::Arena* arena, GetGameStateRequest&& from) noexcept
      : GetGameStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayerFieldNumber = 1,
  };
  // .userservice.Player player = 1;
  bool has_player() const;
  void clear_player() ;
  const ::userservice::Player& player() const;
  PROTOBUF_NODISCARD ::userservice::Player* release_player();
  ::userservice::Player* mutable_player();
  void set_allocated_player(::userservice::Player* value);
  void unsafe_arena_set_allocated_player(::userservice::Player* value);
  ::userservice::Player* unsafe_arena_release_player();

  private:
  const ::userservice::Player& _internal_player() const;
  ::userservice::Player* _internal_mutable_player();

  public:
  // @@protoc_insertion_point(class_scope:userservice.GetGameStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGameStateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::userservice::Player* player_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};
// -------------------------------------------------------------------

class GameState final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userservice.GameState) */ {
 public:
  inline GameState() : GameState(nullptr) {}
  ~GameState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameState(const GameState& from) : GameState(nullptr, from) {}
  inline GameState(GameState&& from) noexcept
      : GameState(nullptr, std::move(from)) {}
  inline GameState& operator=(const GameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameState& operator=(GameState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameState* internal_default_instance() {
    return reinterpret_cast<const GameState*>(
        &_GameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GameState& a, GameState& b) { a.Swap(&b); }
  inline void Swap(GameState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameState& from) { GameState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.GameState"; }

 protected:
  explicit GameState(::google::protobuf::Arena* arena);
  GameState(::google::protobuf::Arena* arena, const GameState& from);
  GameState(::google::protobuf::Arena* arena, GameState&& from) noexcept
      : GameState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 1,
  };
  // repeated .userservice.Player players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::userservice::Player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::userservice::Player>* mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::userservice::Player>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::userservice::Player>* _internal_mutable_players();
  public:
  const ::userservice::Player& players(int index) const;
  ::userservice::Player* add_players();
  const ::google::protobuf::RepeatedPtrField<::userservice::Player>& players() const;
  // @@protoc_insertion_point(class_scope:userservice.GameState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameState& from_msg);
    ::google::protobuf::RepeatedPtrField< ::userservice::Player > players_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};
// -------------------------------------------------------------------

class GetGameStateResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userservice.GetGameStateResponse) */ {
 public:
  inline GetGameStateResponse() : GetGameStateResponse(nullptr) {}
  ~GetGameStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGameStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGameStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGameStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGameStateResponse(const GetGameStateResponse& from) : GetGameStateResponse(nullptr, from) {}
  inline GetGameStateResponse(GetGameStateResponse&& from) noexcept
      : GetGameStateResponse(nullptr, std::move(from)) {}
  inline GetGameStateResponse& operator=(const GetGameStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGameStateResponse& operator=(GetGameStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGameStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGameStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetGameStateResponse*>(
        &_GetGameStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetGameStateResponse& a, GetGameStateResponse& b) { a.Swap(&b); }
  inline void Swap(GetGameStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGameStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGameStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGameStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGameStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGameStateResponse& from) { GetGameStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGameStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "userservice.GetGameStateResponse"; }

 protected:
  explicit GetGameStateResponse(::google::protobuf::Arena* arena);
  GetGameStateResponse(::google::protobuf::Arena* arena, const GetGameStateResponse& from);
  GetGameStateResponse(::google::protobuf::Arena* arena, GetGameStateResponse&& from) noexcept
      : GetGameStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameStateFieldNumber = 1,
  };
  // .userservice.GameState gameState = 1;
  bool has_gamestate() const;
  void clear_gamestate() ;
  const ::userservice::GameState& gamestate() const;
  PROTOBUF_NODISCARD ::userservice::GameState* release_gamestate();
  ::userservice::GameState* mutable_gamestate();
  void set_allocated_gamestate(::userservice::GameState* value);
  void unsafe_arena_set_allocated_gamestate(::userservice::GameState* value);
  ::userservice::GameState* unsafe_arena_release_gamestate();

  private:
  const ::userservice::GameState& _internal_gamestate() const;
  ::userservice::GameState* _internal_mutable_gamestate();

  public:
  // @@protoc_insertion_point(class_scope:userservice.GetGameStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGameStateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::userservice::GameState* gamestate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgame_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Player

// int64 player_id = 1;
inline void Player::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::int64_t{0};
}
inline ::int64_t Player::player_id() const {
  // @@protoc_insertion_point(field_get:userservice.Player.player_id)
  return _internal_player_id();
}
inline void Player::set_player_id(::int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:userservice.Player.player_id)
}
inline ::int64_t Player::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void Player::_internal_set_player_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// int64 pos_x = 2;
inline void Player::clear_pos_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_x_ = ::int64_t{0};
}
inline ::int64_t Player::pos_x() const {
  // @@protoc_insertion_point(field_get:userservice.Player.pos_x)
  return _internal_pos_x();
}
inline void Player::set_pos_x(::int64_t value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:userservice.Player.pos_x)
}
inline ::int64_t Player::_internal_pos_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_x_;
}
inline void Player::_internal_set_pos_x(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_x_ = value;
}

// int64 pos_y = 3;
inline void Player::clear_pos_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_y_ = ::int64_t{0};
}
inline ::int64_t Player::pos_y() const {
  // @@protoc_insertion_point(field_get:userservice.Player.pos_y)
  return _internal_pos_y();
}
inline void Player::set_pos_y(::int64_t value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:userservice.Player.pos_y)
}
inline ::int64_t Player::_internal_pos_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_y_;
}
inline void Player::_internal_set_pos_y(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_y_ = value;
}

// int64 pos_z = 4;
inline void Player::clear_pos_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_z_ = ::int64_t{0};
}
inline ::int64_t Player::pos_z() const {
  // @@protoc_insertion_point(field_get:userservice.Player.pos_z)
  return _internal_pos_z();
}
inline void Player::set_pos_z(::int64_t value) {
  _internal_set_pos_z(value);
  // @@protoc_insertion_point(field_set:userservice.Player.pos_z)
}
inline ::int64_t Player::_internal_pos_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_z_;
}
inline void Player::_internal_set_pos_z(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_z_ = value;
}

// -------------------------------------------------------------------

// RegisterPlayerRequest

// -------------------------------------------------------------------

// RegisterPlayerResponse

// int64 player_id = 1;
inline void RegisterPlayerResponse::clear_player_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = ::int64_t{0};
}
inline ::int64_t RegisterPlayerResponse::player_id() const {
  // @@protoc_insertion_point(field_get:userservice.RegisterPlayerResponse.player_id)
  return _internal_player_id();
}
inline void RegisterPlayerResponse::set_player_id(::int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:userservice.RegisterPlayerResponse.player_id)
}
inline ::int64_t RegisterPlayerResponse::_internal_player_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_id_;
}
inline void RegisterPlayerResponse::_internal_set_player_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// GetGameStateRequest

// .userservice.Player player = 1;
inline bool GetGameStateRequest::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void GetGameStateRequest::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::userservice::Player& GetGameStateRequest::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::userservice::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::userservice::Player&>(::userservice::_Player_default_instance_);
}
inline const ::userservice::Player& GetGameStateRequest::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:userservice.GetGameStateRequest.player)
  return _internal_player();
}
inline void GetGameStateRequest::unsafe_arena_set_allocated_player(::userservice::Player* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::userservice::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:userservice.GetGameStateRequest.player)
}
inline ::userservice::Player* GetGameStateRequest::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::userservice::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::userservice::Player* GetGameStateRequest::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:userservice.GetGameStateRequest.player)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::userservice::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::userservice::Player* GetGameStateRequest::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::userservice::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::userservice::Player*>(p);
  }
  return _impl_.player_;
}
inline ::userservice::Player* GetGameStateRequest::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::userservice::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:userservice.GetGameStateRequest.player)
  return _msg;
}
inline void GetGameStateRequest::set_allocated_player(::userservice::Player* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_ = reinterpret_cast<::userservice::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:userservice.GetGameStateRequest.player)
}

// -------------------------------------------------------------------

// GetGameStateResponse

// .userservice.GameState gameState = 1;
inline bool GetGameStateResponse::has_gamestate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gamestate_ != nullptr);
  return value;
}
inline void GetGameStateResponse::clear_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamestate_ != nullptr) _impl_.gamestate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::userservice::GameState& GetGameStateResponse::_internal_gamestate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::userservice::GameState* p = _impl_.gamestate_;
  return p != nullptr ? *p : reinterpret_cast<const ::userservice::GameState&>(::userservice::_GameState_default_instance_);
}
inline const ::userservice::GameState& GetGameStateResponse::gamestate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:userservice.GetGameStateResponse.gameState)
  return _internal_gamestate();
}
inline void GetGameStateResponse::unsafe_arena_set_allocated_gamestate(::userservice::GameState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gamestate_);
  }
  _impl_.gamestate_ = reinterpret_cast<::userservice::GameState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:userservice.GetGameStateResponse.gameState)
}
inline ::userservice::GameState* GetGameStateResponse::release_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::userservice::GameState* released = _impl_.gamestate_;
  _impl_.gamestate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::userservice::GameState* GetGameStateResponse::unsafe_arena_release_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:userservice.GetGameStateResponse.gameState)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::userservice::GameState* temp = _impl_.gamestate_;
  _impl_.gamestate_ = nullptr;
  return temp;
}
inline ::userservice::GameState* GetGameStateResponse::_internal_mutable_gamestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamestate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::userservice::GameState>(GetArena());
    _impl_.gamestate_ = reinterpret_cast<::userservice::GameState*>(p);
  }
  return _impl_.gamestate_;
}
inline ::userservice::GameState* GetGameStateResponse::mutable_gamestate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::userservice::GameState* _msg = _internal_mutable_gamestate();
  // @@protoc_insertion_point(field_mutable:userservice.GetGameStateResponse.gameState)
  return _msg;
}
inline void GetGameStateResponse::set_allocated_gamestate(::userservice::GameState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.gamestate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.gamestate_ = reinterpret_cast<::userservice::GameState*>(value);
  // @@protoc_insertion_point(field_set_allocated:userservice.GetGameStateResponse.gameState)
}

// -------------------------------------------------------------------

// GameState

// repeated .userservice.Player players = 1;
inline int GameState::_internal_players_size() const {
  return _internal_players().size();
}
inline int GameState::players_size() const {
  return _internal_players_size();
}
inline void GameState::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::userservice::Player* GameState::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:userservice.GameState.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::userservice::Player>* GameState::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:userservice.GameState.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::userservice::Player& GameState::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:userservice.GameState.players)
  return _internal_players().Get(index);
}
inline ::userservice::Player* GameState::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::userservice::Player* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:userservice.GameState.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::userservice::Player>& GameState::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:userservice.GameState.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::userservice::Player>&
GameState::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::userservice::Player>*
GameState::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace userservice


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fgame_2eproto_2epb_2eh
